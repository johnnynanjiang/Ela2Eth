{"version":3,"sources":["ESCExchange.js","ETHExchange.js","God.js","MainView.js","App.js","serviceWorker.js","index.js"],"names":["ESCExchange","abi","JSON","parse","address","wethTokenABI","wethTokenAddress","ETHExchange","God","theEth","theWeb3","_theAccount","API","_contractInput","_contractOutput","_contractWETH","init","callback","window","ethereum","this","enable","Web3","givenProvider","getNetwork","eth","net","getNetworkType","then","network","getAccount","getAccounts","accounts","getBalanceOfWETH","getWETHContract","methods","balanceOf","call","balance","getBalanceOfETH","getBalance","utils","fromWei","Contract","getInputContract","transfer","num","sendTransaction","from","to","value","toWei","String","error","hash","console","requestAPI","tx","s","fetch","method","res","json","responseJson","status","result","catch","getOutputContract","withdraw","args","a","func","mintToken","token_address","txid","BigNumber","amount","nonce","v","r","estimateGas","gas","send","log","e","MainView","props","state","onClickTransferButton","bind","onChangeValue","event","setState","parseFloat","currentTarget","style","margin","fontFamily","wallet","marginTop","marginBottom","onChange","placeholder","step","type","disabled","onClick","fontSize","message","React","Component","App","useState","me","setMe","setNet","setBalance","setMessage","loaded","setLoaded","account","marginLeft","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d9323be7.chunk.js","sourcesContent":["const ESCExchange = {\n\tabi: JSON.parse('[ { \"constant\": true, \"inputs\": [ { \"name\": \"\", \"type\": \"address\" } ], \"name\": \"addressMapping\", \"outputs\": [ { \"name\": \"\", \"type\": \"address\" } ], \"payable\": false, \"stateMutability\": \"view\", \"type\": \"function\" }, { \"constant\": false, \"inputs\": [ { \"name\": \"param1\", \"type\": \"address\" }, { \"name\": \"param2\", \"type\": \"address\" }, { \"name\": \"param3\", \"type\": \"uint256\" }, { \"name\": \"param4\", \"type\": \"uint256\" } ], \"name\": \"reserve3\", \"outputs\": [], \"payable\": false, \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"constant\": false, \"inputs\": [ { \"name\": \"_implementation\", \"type\": \"address\" } ], \"name\": \"upgrade\", \"outputs\": [], \"payable\": false, \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"constant\": true, \"inputs\": [ { \"name\": \"\", \"type\": \"address\" }, { \"name\": \"\", \"type\": \"uint256\" } ], \"name\": \"seenNonces\", \"outputs\": [ { \"name\": \"\", \"type\": \"bool\" } ], \"payable\": false, \"stateMutability\": \"view\", \"type\": \"function\" }, { \"constant\": false, \"inputs\": [ { \"name\": \"txid\", \"type\": \"uint256\" }, { \"name\": \"to\", \"type\": \"address\" }, { \"name\": \"amount\", \"type\": \"uint256\" }, { \"name\": \"_nonce\", \"type\": \"uint256[]\" }, { \"name\": \"v\", \"type\": \"uint8[]\" }, { \"name\": \"r\", \"type\": \"bytes32[]\" }, { \"name\": \"s\", \"type\": \"bytes32[]\" } ], \"name\": \"withdrawEth\", \"outputs\": [], \"payable\": false, \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"constant\": true, \"inputs\": [ { \"name\": \"\", \"type\": \"address\" } ], \"name\": \"reserve_address_uint256\", \"outputs\": [ { \"name\": \"\", \"type\": \"uint256\" } ], \"payable\": false, \"stateMutability\": \"view\", \"type\": \"function\" }, { \"constant\": false, \"inputs\": [ { \"name\": \"_fee\", \"type\": \"uint256\" } ], \"name\": \"setFeeRate\", \"outputs\": [], \"payable\": false, \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"constant\": true, \"inputs\": [ { \"name\": \"\", \"type\": \"uint256\" } ], \"name\": \"oracles\", \"outputs\": [ { \"name\": \"\", \"type\": \"address\" } ], \"payable\": false, \"stateMutability\": \"view\", \"type\": \"function\" }, { \"constant\": true, \"inputs\": [ { \"name\": \"\", \"type\": \"address\" } ], \"name\": \"totalFee\", \"outputs\": [ { \"name\": \"\", \"type\": \"uint256\" } ], \"payable\": false, \"stateMutability\": \"view\", \"type\": \"function\" }, { \"constant\": true, \"inputs\": [ { \"name\": \"\", \"type\": \"address\" } ], \"name\": \"reserve_address_address\", \"outputs\": [ { \"name\": \"\", \"type\": \"address\" } ], \"payable\": false, \"stateMutability\": \"view\", \"type\": \"function\" }, { \"constant\": true, \"inputs\": [ { \"name\": \"\", \"type\": \"uint256\" } ], \"name\": \"reserve_uint256_bool\", \"outputs\": [ { \"name\": \"\", \"type\": \"bool\" } ], \"payable\": false, \"stateMutability\": \"view\", \"type\": \"function\" }, { \"constant\": true, \"inputs\": [], \"name\": \"MAX_ORACLES_PARTYES\", \"outputs\": [ { \"name\": \"\", \"type\": \"uint256\" } ], \"payable\": false, \"stateMutability\": \"view\", \"type\": \"function\" }, { \"constant\": false, \"inputs\": [ { \"name\": \"token_address\", \"type\": \"address\" }, { \"name\": \"txid\", \"type\": \"uint256\" }, { \"name\": \"to\", \"type\": \"address\" }, { \"name\": \"amount\", \"type\": \"uint256\" }, { \"name\": \"_nonce\", \"type\": \"uint256[]\" }, { \"name\": \"v\", \"type\": \"uint8[]\" }, { \"name\": \"r\", \"type\": \"bytes32[]\" }, { \"name\": \"s\", \"type\": \"bytes32[]\" } ], \"name\": \"mintToken\", \"outputs\": [], \"payable\": false, \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"constant\": true, \"inputs\": [ { \"name\": \"\", \"type\": \"uint256\" } ], \"name\": \"transactions\", \"outputs\": [ { \"name\": \"destination\", \"type\": \"address\" }, { \"name\": \"value\", \"type\": \"uint256\" } ], \"payable\": false, \"stateMutability\": \"view\", \"type\": \"function\" }, { \"constant\": true, \"inputs\": [], \"name\": \"implementation_slot\", \"outputs\": [ { \"name\": \"\", \"type\": \"address\" } ], \"payable\": false, \"stateMutability\": \"view\", \"type\": \"function\" }, { \"constant\": false, \"inputs\": [ { \"name\": \"ethTokenAddress\", \"type\": \"address\" }, { \"name\": \"escTokenAddress\", \"type\": \"address\" } ], \"name\": \"setTokenMapping\", \"outputs\": [], \"payable\": false, \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"constant\": true, \"inputs\": [ { \"name\": \"\", \"type\": \"address\" } ], \"name\": \"isOracle\", \"outputs\": [ { \"name\": \"\", \"type\": \"bool\" } ], \"payable\": false, \"stateMutability\": \"view\", \"type\": \"function\" }, { \"constant\": true, \"inputs\": [ { \"name\": \"\", \"type\": \"uint256\" } ], \"name\": \"seenTxids\", \"outputs\": [ { \"name\": \"\", \"type\": \"bool\" } ], \"payable\": false, \"stateMutability\": \"view\", \"type\": \"function\" }, { \"constant\": true, \"inputs\": [], \"name\": \"transactionCount\", \"outputs\": [ { \"name\": \"\", \"type\": \"uint256\" } ], \"payable\": false, \"stateMutability\": \"view\", \"type\": \"function\" }, { \"constant\": false, \"inputs\": [ { \"name\": \"param1\", \"type\": \"address\" }, { \"name\": \"param2\", \"type\": \"uint256\" } ], \"name\": \"reserve\", \"outputs\": [], \"payable\": false, \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"constant\": false, \"inputs\": [ { \"name\": \"_required\", \"type\": \"uint256\" } ], \"name\": \"changeRequired\", \"outputs\": [], \"payable\": false, \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"constant\": false, \"inputs\": [ { \"name\": \"param1\", \"type\": \"address\" }, { \"name\": \"param2\", \"type\": \"address\" }, { \"name\": \"param3\", \"type\": \"uint256\" } ], \"name\": \"reserve2\", \"outputs\": [], \"payable\": false, \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"constant\": true, \"inputs\": [], \"name\": \"required\", \"outputs\": [ { \"name\": \"\", \"type\": \"uint256\" } ], \"payable\": false, \"stateMutability\": \"view\", \"type\": \"function\" }, { \"constant\": true, \"inputs\": [], \"name\": \"fee\", \"outputs\": [ { \"name\": \"\", \"type\": \"uint256\" } ], \"payable\": false, \"stateMutability\": \"view\", \"type\": \"function\" }, { \"constant\": false, \"inputs\": [ { \"name\": \"_oracle\", \"type\": \"address\" } ], \"name\": \"addOracle\", \"outputs\": [], \"payable\": false, \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"constant\": true, \"inputs\": [], \"name\": \"admin\", \"outputs\": [ { \"name\": \"\", \"type\": \"address\" } ], \"payable\": false, \"stateMutability\": \"view\", \"type\": \"function\" }, { \"constant\": false, \"inputs\": [ { \"name\": \"_oracle\", \"type\": \"address\" } ], \"name\": \"removeOracle\", \"outputs\": [], \"payable\": false, \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"name\": \"_oracles\", \"type\": \"address[]\" }, { \"name\": \"_required\", \"type\": \"uint256\" } ], \"payable\": false, \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"payable\": true, \"stateMutability\": \"payable\", \"type\": \"fallback\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"name\": \"to\", \"type\": \"address\" }, { \"indexed\": true, \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"Execution\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"name\": \"to\", \"type\": \"address\" }, { \"indexed\": true, \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"ExecutionFailure\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"name\": \"fee\", \"type\": \"uint256\" } ], \"name\": \"SetFee\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"name\": \"tokenAddress\", \"type\": \"address\" }, { \"indexed\": true, \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": false, \"name\": \"value\", \"type\": \"uint256\" } ], \"name\": \"MintToken\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"name\": \"ethTokenAddress\", \"type\": \"address\" }, { \"indexed\": true, \"name\": \"escTokenAddress\", \"type\": \"address\" } ], \"name\": \"SetTokenMapping\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": false, \"name\": \"_required\", \"type\": \"uint256\" } ], \"name\": \"RequirementChange\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"name\": \"_oracle\", \"type\": \"address\" } ], \"name\": \"OracleRemoval\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"name\": \"_oracle\", \"type\": \"address\" } ], \"name\": \"OracleAdded\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"name\": \"txid\", \"type\": \"uint256\" } ], \"name\": \"TxidVerified\", \"type\": \"event\" } ]'),\n\taddress: '0xFD99ca0Efe8eDACf20f47E648fba40f74f314939',\n\twethTokenABI: JSON.parse('[{ \"type\": \"function\", \"stateMutability\": \"view\", \"payable\": false, \"outputs\": [{ \"type\": \"bool\", \"name\": \"\" }], \"name\": \"supportsInterface\", \"inputs\": [{ \"type\": \"bytes4\", \"name\": \"interfaceId\" }], \"constant\": true }, { \"type\": \"function\", \"stateMutability\": \"view\", \"payable\": false, \"outputs\": [{ \"type\": \"string\", \"name\": \"\" }], \"name\": \"name\", \"inputs\": [], \"constant\": true }, { \"type\": \"function\", \"stateMutability\": \"nonpayable\", \"payable\": false, \"outputs\": [{ \"type\": \"bool\", \"name\": \"\" }], \"name\": \"approve\", \"inputs\": [{ \"type\": \"address\", \"name\": \"spender\" }, { \"type\": \"uint256\", \"name\": \"value\" }], \"constant\": false }, { \"type\": \"function\", \"stateMutability\": \"nonpayable\", \"payable\": false, \"outputs\": [{ \"type\": \"bool\", \"name\": \"\" }], \"name\": \"transferAndCall\", \"inputs\": [{ \"type\": \"address\", \"name\": \"to\" }, { \"type\": \"uint256\", \"name\": \"value\" }], \"constant\": false }, { \"type\": \"function\", \"stateMutability\": \"view\", \"payable\": false, \"outputs\": [{ \"type\": \"uint256\", \"name\": \"\" }], \"name\": \"totalSupply\", \"inputs\": [], \"constant\": true }, { \"type\": \"function\", \"stateMutability\": \"nonpayable\", \"payable\": false, \"outputs\": [{ \"type\": \"bool\", \"name\": \"\" }], \"name\": \"transferFrom\", \"inputs\": [{ \"type\": \"address\", \"name\": \"from\" }, { \"type\": \"address\", \"name\": \"to\" }, { \"type\": \"uint256\", \"name\": \"value\" }], \"constant\": false }, { \"type\": \"function\", \"stateMutability\": \"view\", \"payable\": false, \"outputs\": [{ \"type\": \"uint8\", \"name\": \"\" }], \"name\": \"decimals\", \"inputs\": [], \"constant\": true }, { \"type\": \"function\", \"stateMutability\": \"nonpayable\", \"payable\": false, \"outputs\": [{ \"type\": \"bool\", \"name\": \"\" }], \"name\": \"approveAndCall\", \"inputs\": [{ \"type\": \"address\", \"name\": \"spender\" }, { \"type\": \"uint256\", \"name\": \"value\" }], \"constant\": false }, { \"type\": \"function\", \"stateMutability\": \"view\", \"payable\": false, \"outputs\": [{ \"type\": \"uint256\", \"name\": \"\" }], \"name\": \"cap\", \"inputs\": [], \"constant\": true }, { \"type\": \"function\", \"stateMutability\": \"nonpayable\", \"payable\": false, \"outputs\": [{ \"type\": \"bool\", \"name\": \"\" }], \"name\": \"increaseAllowance\", \"inputs\": [{ \"type\": \"address\", \"name\": \"spender\" }, { \"type\": \"uint256\", \"name\": \"addedValue\" }], \"constant\": false }, { \"type\": \"function\", \"stateMutability\": \"nonpayable\", \"payable\": false, \"outputs\": [{ \"type\": \"bool\", \"name\": \"\" }], \"name\": \"transferAndCall\", \"inputs\": [{ \"type\": \"address\", \"name\": \"to\" }, { \"type\": \"uint256\", \"name\": \"value\" }, { \"type\": \"bytes\", \"name\": \"data\" }], \"constant\": false }, { \"type\": \"function\", \"stateMutability\": \"nonpayable\", \"payable\": false, \"outputs\": [{ \"type\": \"bool\", \"name\": \"\" }], \"name\": \"mint\", \"inputs\": [{ \"type\": \"address\", \"name\": \"to\" }, { \"type\": \"uint256\", \"name\": \"value\" }], \"constant\": false }, { \"type\": \"function\", \"stateMutability\": \"nonpayable\", \"payable\": false, \"outputs\": [], \"name\": \"burn\", \"inputs\": [{ \"type\": \"uint256\", \"name\": \"value\" }], \"constant\": false }, { \"type\": \"function\", \"stateMutability\": \"view\", \"payable\": false, \"outputs\": [{ \"type\": \"uint256\", \"name\": \"\" }], \"name\": \"balanceOf\", \"inputs\": [{ \"type\": \"address\", \"name\": \"owner\" }], \"constant\": true }, { \"type\": \"function\", \"stateMutability\": \"nonpayable\", \"payable\": false, \"outputs\": [], \"name\": \"renounceOwnership\", \"inputs\": [], \"constant\": false }, { \"type\": \"function\", \"stateMutability\": \"nonpayable\", \"payable\": false, \"outputs\": [], \"name\": \"burnFrom\", \"inputs\": [{ \"type\": \"address\", \"name\": \"from\" }, { \"type\": \"uint256\", \"name\": \"value\" }], \"constant\": false }, { \"type\": \"function\", \"stateMutability\": \"nonpayable\", \"payable\": false, \"outputs\": [], \"name\": \"recoverERC20\", \"inputs\": [{ \"type\": \"address\", \"name\": \"tokenAddress\" }, { \"type\": \"uint256\", \"name\": \"tokenAmount\" }], \"constant\": false }, { \"type\": \"function\", \"stateMutability\": \"view\", \"payable\": false, \"outputs\": [{ \"type\": \"address\", \"name\": \"\" }], \"name\": \"owner\", \"inputs\": [], \"constant\": true }, { \"type\": \"function\", \"stateMutability\": \"view\", \"payable\": false, \"outputs\": [{ \"type\": \"bool\", \"name\": \"\" }], \"name\": \"isOwner\", \"inputs\": [], \"constant\": true }, { \"type\": \"function\", \"stateMutability\": \"view\", \"payable\": false, \"outputs\": [{ \"type\": \"string\", \"name\": \"\" }], \"name\": \"symbol\", \"inputs\": [], \"constant\": true }, { \"type\": \"function\", \"stateMutability\": \"nonpayable\", \"payable\": false, \"outputs\": [], \"name\": \"addMinter\", \"inputs\": [{ \"type\": \"address\", \"name\": \"account\" }], \"constant\": false }, { \"type\": \"function\", \"stateMutability\": \"nonpayable\", \"payable\": false, \"outputs\": [], \"name\": \"renounceMinter\", \"inputs\": [], \"constant\": false }, { \"type\": \"function\", \"stateMutability\": \"nonpayable\", \"payable\": false, \"outputs\": [{ \"type\": \"bool\", \"name\": \"\" }], \"name\": \"decreaseAllowance\", \"inputs\": [{ \"type\": \"address\", \"name\": \"spender\" }, { \"type\": \"uint256\", \"name\": \"subtractedValue\" }], \"constant\": false }, { \"type\": \"function\", \"stateMutability\": \"nonpayable\", \"payable\": false, \"outputs\": [{ \"type\": \"bool\", \"name\": \"\" }], \"name\": \"transfer\", \"inputs\": [{ \"type\": \"address\", \"name\": \"to\" }, { \"type\": \"uint256\", \"name\": \"value\" }], \"constant\": false }, { \"type\": \"function\", \"stateMutability\": \"view\", \"payable\": false, \"outputs\": [{ \"type\": \"bool\", \"name\": \"\" }], \"name\": \"isMinter\", \"inputs\": [{ \"type\": \"address\", \"name\": \"account\" }], \"constant\": true }, { \"type\": \"function\", \"stateMutability\": \"nonpayable\", \"payable\": false, \"outputs\": [{ \"type\": \"bool\", \"name\": \"\" }], \"name\": \"transferFromAndCall\", \"inputs\": [{ \"type\": \"address\", \"name\": \"from\" }, { \"type\": \"address\", \"name\": \"to\" }, { \"type\": \"uint256\", \"name\": \"value\" }, { \"type\": \"bytes\", \"name\": \"data\" }], \"constant\": false }, { \"type\": \"function\", \"stateMutability\": \"nonpayable\", \"payable\": false, \"outputs\": [{ \"type\": \"bool\", \"name\": \"\" }], \"name\": \"approveAndCall\", \"inputs\": [{ \"type\": \"address\", \"name\": \"spender\" }, { \"type\": \"uint256\", \"name\": \"value\" }, { \"type\": \"bytes\", \"name\": \"data\" }], \"constant\": false }, { \"type\": \"function\", \"stateMutability\": \"nonpayable\", \"payable\": false, \"outputs\": [{ \"type\": \"bool\", \"name\": \"\" }], \"name\": \"transferFromAndCall\", \"inputs\": [{ \"type\": \"address\", \"name\": \"from\" }, { \"type\": \"address\", \"name\": \"to\" }, { \"type\": \"uint256\", \"name\": \"value\" }], \"constant\": false }, { \"type\": \"function\", \"stateMutability\": \"view\", \"payable\": false, \"outputs\": [{ \"type\": \"uint256\", \"name\": \"\" }], \"name\": \"allowance\", \"inputs\": [{ \"type\": \"address\", \"name\": \"owner\" }, { \"type\": \"address\", \"name\": \"spender\" }], \"constant\": true }, { \"type\": \"function\", \"stateMutability\": \"nonpayable\", \"payable\": false, \"outputs\": [], \"name\": \"transferOwnership\", \"inputs\": [{ \"type\": \"address\", \"name\": \"newOwner\" }], \"constant\": false }, { \"type\": \"constructor\", \"stateMutability\": \"nonpayable\", \"payable\": false, \"inputs\": [{ \"type\": \"string\", \"name\": \"name\" }, { \"type\": \"string\", \"name\": \"symbol\" }, { \"type\": \"uint8\", \"name\": \"decimals\" }, { \"type\": \"uint256\", \"name\": \"cap\" }, { \"type\": \"uint256\", \"name\": \"initialBalance\" }] }, { \"type\": \"event\", \"name\": \"OwnershipTransferred\", \"inputs\": [{ \"type\": \"address\", \"name\": \"previousOwner\", \"indexed\": true }, { \"type\": \"address\", \"name\": \"newOwner\", \"indexed\": true }], \"anonymous\": false }, { \"type\": \"event\", \"name\": \"MinterAdded\", \"inputs\": [{ \"type\": \"address\", \"name\": \"account\", \"indexed\": true }], \"anonymous\": false }, { \"type\": \"event\", \"name\": \"MinterRemoved\", \"inputs\": [{ \"type\": \"address\", \"name\": \"account\", \"indexed\": true }], \"anonymous\": false }, { \"type\": \"event\", \"name\": \"Transfer\", \"inputs\": [{ \"type\": \"address\", \"name\": \"from\", \"indexed\": true }, { \"type\": \"address\", \"name\": \"to\", \"indexed\": true }, { \"type\": \"uint256\", \"name\": \"value\", \"indexed\": false }], \"anonymous\": false }, { \"type\": \"event\", \"name\": \"Approval\", \"inputs\": [{ \"type\": \"address\", \"name\": \"owner\", \"indexed\": true }, { \"type\": \"address\", \"name\": \"spender\", \"indexed\": true }, { \"type\": \"uint256\", \"name\": \"value\", \"indexed\": false }], \"anonymous\": false }]'),\n\twethTokenAddress: \"0x289e47ac1d5c4cd0587b8f7871be62617aa035b2\"\n}\n\nexport default ESCExchange","const ETHExchange = {\n\tabi: JSON.parse('[{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressMapping\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"seenNonces\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"txid\",\"type\":\"uint256\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"},{\"name\":\"_nonce\",\"type\":\"uint256[]\"},{\"name\":\"v\",\"type\":\"uint8[]\"},{\"name\":\"r\",\"type\":\"bytes32[]\"},{\"name\":\"s\",\"type\":\"bytes32[]\"}],\"name\":\"mint\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"cap\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"weth\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getOracles\",\"outputs\":[{\"name\":\"\",\"type\":\"address[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_fee\",\"type\":\"uint256\"}],\"name\":\"setFeeRate\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"oracles\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"totalFee\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MAX_ORACLES_PARTYES\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"transactions\",\"outputs\":[{\"name\":\"destination\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"token_address\",\"type\":\"address\"},{\"name\":\"txid\",\"type\":\"uint256\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"},{\"name\":\"_nonce\",\"type\":\"uint256[]\"},{\"name\":\"v\",\"type\":\"uint8[]\"},{\"name\":\"r\",\"type\":\"bytes32[]\"},{\"name\":\"s\",\"type\":\"bytes32[]\"}],\"name\":\"withdrawToken\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"ethTokenAddress\",\"type\":\"address\"},{\"name\":\"escTokenAddress\",\"type\":\"address\"}],\"name\":\"setTokenMapping\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"isOracle\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"seenTxids\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"transactionCount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_required\",\"type\":\"uint256\"}],\"name\":\"changeRequired\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"required\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"fee\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_oracle\",\"type\":\"address\"}],\"name\":\"addOracle\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_oracle\",\"type\":\"address\"}],\"name\":\"removeOracle\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"symbol\",\"type\":\"string\"},{\"name\":\"decimals\",\"type\":\"uint8\"},{\"name\":\"cap\",\"type\":\"uint256\"},{\"name\":\"_oracles\",\"type\":\"address[]\"},{\"name\":\"_required\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Execution\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ExecutionFailure\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"fee\",\"type\":\"uint256\"}],\"name\":\"SetFee\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"ethTokenAddress\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"escTokenAddress\",\"type\":\"address\"}],\"name\":\"SetTokenMapping\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_required\",\"type\":\"uint256\"}],\"name\":\"RequirementChange\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_oracle\",\"type\":\"address\"}],\"name\":\"OracleRemoval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_oracle\",\"type\":\"address\"}],\"name\":\"OracleAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"txid\",\"type\":\"uint256\"}],\"name\":\"TxidVerified\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]'),\n\taddress: '0xf98D7594f3f68ed2d667bB89f5e4506193a02eC3'\n}\n\nexport default ETHExchange","import Web3 from 'web3'\nimport ESCExchange from './ESCExchange'\nimport BigNumber from 'bignumber.js'\nimport ETHExchange from \"./ETHExchange\";\n\nconst God = {\n\ttheEth: null,\n\ttheWeb3: null,\n\t_theAccount: '',\n\tAPI: '/api/v1/oracle/signature',\n\t_contractInput: null,\n\t_contractOutput: null,\n\t_contractWETH: null,\n\n\t/**\n\t * 因为是测试模拟流程，所以没有实现基于web3的新建帐户或导入已有帐户私钥等功能，暂时先基于Metamask浏览器插件运行。\n\t * 初始化时连接Metamask后，使用Metamask封装的web3进行链的操作。\n\t * @param {Function} callback 成功后回调。\n\t */\n\tinit: function (callback) {\n\t\tif (typeof window.ethereum !== 'undefined') {\n\t\t\tthis.theEth = window.ethereum\n\t\t\tthis.theEth.enable()\n\t\t\tthis.theWeb3 = new Web3(Web3.givenProvider)\n\t\t\t// this.theWeb3 = new Web3('https://mainrpc.elaeth.io')\n\t\t\t// this.theWeb3 = new Web3('https://rpc.elaeth.io')\n\t\t\treturn callback()\n\t\t}\n\t},\n\n\tgetNetwork: function (callback) {\n\t\tthis.theWeb3.eth.net.getNetworkType().then(network => {\n\t\t\treturn callback(network)\n\t\t})\n\t},\n\n\tgetAccount: function (callback) {\n\t\tthis.theWeb3.eth.getAccounts().then(accounts => {\n\t\t\tthis._theAccount = accounts[0]\n\t\t\treturn callback(this._theAccount)\n\t\t})\n\t},\n\n\tgetBalanceOfWETH: function (callback) {\n\t\tthis.getWETHContract().methods.balanceOf(this._theAccount).call().then(balance => {\n\t\t\treturn callback(balance)\n\t\t})\n\t},\n\n\tgetBalanceOfETH: function (callback) {\n\t\tthis.theWeb3.eth.getBalance(this._theAccount).then(balance => {\n\t\t\treturn callback(this.theWeb3.utils.fromWei(balance, 'ether'))\n\t\t})\n\t},\n\n\tgetWETHContract: function () {\n\t\tif (!this._contractWETH) {\n\t\t\tthis._contractWETH = new this.theWeb3.eth.Contract(ESCExchange.wethTokenABI, ESCExchange.wethTokenAddress)\n\t\t}\n\n\t\treturn this._contractWETH\n\t},\n\n\tgetInputContract: function () {\n\t\tif (!this._contractInput) {\n\t\t\tthis._contractInput = new this.theWeb3.eth.Contract(ETHExchange.abi, ETHExchange.address)\n\t\t}\n\t\treturn this._contractInput\n\t},\n\n\t/**\n\t * 向初始合约发送指定ETH。\n\t * @param {Number} num 转帐数量\n\t * @param {Function} callback 成功后回调。\n\t */\n\ttransfer: function (num, callback) {\n\t\tthis.theWeb3.eth.sendTransaction({\n\t\t\tfrom: this._theAccount,\n\t\t\tto: ETHExchange.address,\n\t\t\tvalue: this.theWeb3.utils.toWei(String(num), 'ether')\n\t\t}, (error, hash) => {\n\t\t\tif (error) {\n\t\t\t\treturn console.error(error)\n\t\t\t} else {\n\t\t\t\treturn callback(hash)\n\t\t\t}\n\t\t})\n\t},\n\n\t/**\n\t * 请求签名接口。\n\t * @param {String} tx 转帐交易tx\n\t * @param {Function} callback 成功后回调\n\t */\n\trequestAPI: function (tx, callback) {\n\t\tconst s = this.API + '?txid=' + tx + '&chain_type=ETH'\n\t\tfetch(s, {\n\t\t\tmethod: 'GET'\n\t\t}).then(res => res.json()).then((responseJson) => {\n\t\t\tif (responseJson.status === 200) {\n\t\t\t\treturn callback(responseJson.result)\n\t\t\t}\n\t\t}).catch((error) => {\n\t\t\tconsole.error(error);\n\t\t})\n\t},\n\n\t/**\n\t * 根据签名接口返回的合约地址生成提币合约对象。\n\t */\n\tgetOutputContract: function () {\n\t\t// JSON RPC ➡ Testnet: https://rpc.elaeth.io, Mainnet: https://mainrpc.elaeth.io\n\t\tif (!this._contractOutput) {\n\t\t\tthis._contractOutput = new this.theWeb3.eth.Contract(ESCExchange.abi, ESCExchange.address)\n\t\t}\n\n\t\treturn this._contractOutput\n\t},\n\n\t/**\n\t * 提币操作。\n\t * @param {Object} args 参数对象。\n\t * @param {Function} callback 成功后回调。\n\t */\n\twithdraw: async function (args, callback) {\n\t\tconst func = this.getOutputContract().methods.mintToken(\n\t\t\targs.token_address,\n\t\t\targs.txid,\n\t\t\targs.to,\n\t\t\tnew BigNumber(args.amount),\n\t\t\t[args.nonce],\n\t\t\t[args.v],\n\t\t\t[args.r],\n\t\t\t[args.s]\n\t\t)\n\n\t\tfunc.estimateGas({ from: this._theAccount }).then(gas => {\n\t\t\tfunc.send({\n\t\t\t\tfrom: this._theAccount,\n\t\t\t\tgas: gas\n\t\t\t}).then((res) => {\n\t\t\t\tconsole.log(res)\n\t\t\t}).catch(e => {\n\t\t\t\tconsole.error(e)\n\t\t\t})\n\t\t})\n\t}\n}\n\nexport default God","import React from 'react'\n\nclass MainView extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props)\n\n\t\tthis.state = {\n\t\t\tvalue: 0\n\t\t}\n\n\t\tthis.onClickTransferButton = this.onClickTransferButton.bind(this)\n\t\tthis.onChangeValue = this.onChangeValue.bind(this)\n\t}\n\n\tonClickTransferButton() {\n\t\tif (this.state.value > 0) {\n\t\t\treturn this.props.transfer(this.state.value)\n\t\t}\n\t}\n\n\tonChangeValue(event) {\n\t\tthis.setState({\n\t\t\tvalue: parseFloat(event.currentTarget.value)\n\t\t})\n\t}\n\n\trender() {\n\t\treturn <div style={{\n\t\t\tmargin: '1rem',\n\t\t\tfontFamily: 'monospace'\n\t\t}}>\n\t\t\t<div>\n\t\t\t\t<span>Current Network: </span>\n\t\t\t\t<span>{this.props.net}</span>\n\t\t\t</div>\n\n\t\t\t<div>\n\t\t\t\t<span>Current Wallet: </span>\n\t\t\t\t<span>{this.props.wallet}</span>\n\t\t\t</div>\n\n\t\t\t{/* <div>\n\t\t\t\t<span>WETH Balance: </span>\n\t\t\t\t<span>{this.props.balanceELA}</span>\n\t\t\t</div> */}\n\n\t\t\t<div>\n\t\t\t\t<span>ETH Balance: </span>\n\t\t\t\t<span>{this.props.balance}</span>\n\t\t\t</div>\n\n\t\t\t<div style={{\n\t\t\t\tmarginTop: '1rem',\n\t\t\t\tmarginBottom: '1rem'\n\t\t\t}}>\n\t\t\t\t<div>Transfer ETH to WETH</div>\n\n\t\t\t\t<div>\n\t\t\t\t\t<span>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\tonChange={this.onChangeValue}\n\t\t\t\t\t\t\tplaceholder=\"ether\"\n\t\t\t\t\t\t\tstep=\"0.01\"\n\t\t\t\t\t\t\ttype=\"number\" />\n\t\t\t\t\t</span>\n\t\t\t\t\t<button\n\t\t\t\t\t\tdisabled={!(this.state.value > 0)}\n\t\t\t\t\t\tonClick={this.onClickTransferButton}>转换</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t<div style={{\n\t\t\t\tfontSize: '0.8rem'\n\t\t\t}}>{this.props.message}</div>\n\t\t</div>\n\t}\n}\n\nexport default MainView","import React, { useState } from 'react';\nimport God from './God'\nimport MainView from './MainView'\n\nfunction App() {\n  const [me, setMe] = useState('')\n  const [net, setNet] = useState('')\n  const [balance, setBalance] = useState(0)\n  const [balanceELA, setBalanceELA] = useState(0)\n  const [message, setMessage] = useState('点击“转换”按钮发送token')\n  const [loaded, setLoaded] = useState(false)\n\n  God.init(() => {\n    God.getNetwork(network => {\n      setNet(network)\n    })\n\n    God.getAccount(account => {\n      setMe(account)\n\n      God.getBalanceOfETH(eth => {\n        setBalance(eth)\n      })\n\n      setLoaded(true)\n    })\n  })\n\n  const transfer = (num) => {\n    setMessage('正在向指定合约转帐，等待唤起Metamask……')\n\n    God.transfer(num, tx => {\n      setMessage('转帐请求（' + tx + '）正在确认，请求签名接口……')\n\n      God.requestAPI(tx, result => {\n        setMessage('正在请求提币合约……')\n\n        God.withdraw(result, () => {\n          setMessage('流程结束，提取请求正在等待节点确认……')\n        })\n      })\n    })\n  }\n\n  return (\n    <div>\n      <h1 style={{ marginLeft: '1rem' }}>Smart Contract Testing</h1>\n\n      {loaded ? (<MainView\n        net={net}\n        wallet={me}\n        balance={balance}\n        // balanceELA={balanceELA}\n        transfer={transfer}\n        message={message} />) : null}\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}