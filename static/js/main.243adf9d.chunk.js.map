{"version":3,"sources":["Withdrawer.js","ELA.js","God.js","MainView.js","App.js","serviceWorker.js","index.js"],"names":["Withdrawer","abi","JSON","parse","ELA","address","God","theEth","theWeb3","theWithdrawer","_theAccount","API","_contractELA","init","callback","console","log","window","ethereum","this","enable","Web3","givenProvider","getNetwork","eth","net","getNetworkType","then","network","getAccount","getAccounts","accounts","getBalanceOfELA","getELAContract","methods","balanceOf","call","balance","getBalanceOfETH","getBalance","utils","fromWei","Contract","sendELA","num","requestAPI","tx","makeWithdrawer","contractAddress","withdraw","args","txid","to","amount","nonce","v","r","s","res","MainView","props","state","value","onClickSendELA","bind","onChangeValue","String","event","setState","parseFloat","currentTarget","style","margin","fontFamily","wallet","balanceELA","marginTop","marginBottom","onChange","step","type","disabled","onClick","fontSize","message","React","Component","App","useState","me","setMe","setNet","setBalance","setBalanceELA","setMessage","loaded","setLoaded","account","ela","marginLeft","result","contract","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.243adf9d.chunk.js","sourcesContent":["const Withdrawer = {\n\tabi: JSON.parse('[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalFee\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"seenNonces\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"txid\",\"type\":\"uint256\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"},{\"name\":\"_nonce\",\"type\":\"uint256[]\"},{\"name\":\"v\",\"type\":\"uint8[]\"},{\"name\":\"r\",\"type\":\"bytes32[]\"},{\"name\":\"s\",\"type\":\"bytes32[]\"}],\"name\":\"mint\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"cap\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getOracles\",\"outputs\":[{\"name\":\"\",\"type\":\"address[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_fee\",\"type\":\"uint256\"}],\"name\":\"setFeeRate\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"oracles\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MAX_ORACLES_PARTYES\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"transactions\",\"outputs\":[{\"name\":\"destination\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"txid\",\"type\":\"uint256\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"},{\"name\":\"_nonce\",\"type\":\"uint256[]\"},{\"name\":\"v\",\"type\":\"uint8[]\"},{\"name\":\"r\",\"type\":\"bytes32[]\"},{\"name\":\"s\",\"type\":\"bytes32[]\"}],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"isOracle\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"contract_usdt\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"seenTxids\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"transactionCount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_required\",\"type\":\"uint256\"}],\"name\":\"changeRequired\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"required\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"fee\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_oracle\",\"type\":\"address\"}],\"name\":\"addOracle\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"unit_usdt\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_oracle\",\"type\":\"address\"}],\"name\":\"removeOracle\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"symbol\",\"type\":\"string\"},{\"name\":\"decimals\",\"type\":\"uint8\"},{\"name\":\"cap\",\"type\":\"uint256\"},{\"name\":\"_oracles\",\"type\":\"address[]\"},{\"name\":\"_required\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Execution\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ExecutionFailure\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"fee\",\"type\":\"uint256\"}],\"name\":\"SetFee\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_required\",\"type\":\"uint256\"}],\"name\":\"RequirementChange\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_oracle\",\"type\":\"address\"}],\"name\":\"OracleRemoval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_oracle\",\"type\":\"address\"}],\"name\":\"OracleAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]')\n}\n\nexport default Withdrawer","const ELA = {\n\tabi: JSON.parse('[{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressMapping\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"seenNonces\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"txid\",\"type\":\"uint256\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"},{\"name\":\"_nonce\",\"type\":\"uint256[]\"},{\"name\":\"v\",\"type\":\"uint8[]\"},{\"name\":\"r\",\"type\":\"bytes32[]\"},{\"name\":\"s\",\"type\":\"bytes32[]\"}],\"name\":\"mint\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"cap\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"weth\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getOracles\",\"outputs\":[{\"name\":\"\",\"type\":\"address[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_fee\",\"type\":\"uint256\"}],\"name\":\"setFeeRate\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"oracles\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"totalFee\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MAX_ORACLES_PARTYES\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"transactions\",\"outputs\":[{\"name\":\"destination\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"token_address\",\"type\":\"address\"},{\"name\":\"txid\",\"type\":\"uint256\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"},{\"name\":\"_nonce\",\"type\":\"uint256[]\"},{\"name\":\"v\",\"type\":\"uint8[]\"},{\"name\":\"r\",\"type\":\"bytes32[]\"},{\"name\":\"s\",\"type\":\"bytes32[]\"}],\"name\":\"withdrawToken\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"ethTokenAddress\",\"type\":\"address\"},{\"name\":\"escTokenAddress\",\"type\":\"address\"}],\"name\":\"setTokenMapping\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"isOracle\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"seenTxids\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"transactionCount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_required\",\"type\":\"uint256\"}],\"name\":\"changeRequired\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"required\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"fee\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_oracle\",\"type\":\"address\"}],\"name\":\"addOracle\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_oracle\",\"type\":\"address\"}],\"name\":\"removeOracle\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"symbol\",\"type\":\"string\"},{\"name\":\"decimals\",\"type\":\"uint8\"},{\"name\":\"cap\",\"type\":\"uint256\"},{\"name\":\"_oracles\",\"type\":\"address[]\"},{\"name\":\"_required\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Execution\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ExecutionFailure\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"fee\",\"type\":\"uint256\"}],\"name\":\"SetFee\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"ethTokenAddress\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"escTokenAddress\",\"type\":\"address\"}],\"name\":\"SetTokenMapping\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_required\",\"type\":\"uint256\"}],\"name\":\"RequirementChange\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_oracle\",\"type\":\"address\"}],\"name\":\"OracleRemoval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_oracle\",\"type\":\"address\"}],\"name\":\"OracleAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"txid\",\"type\":\"uint256\"}],\"name\":\"TxidVerified\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]'),\n\taddress: '0xf98D7594f3f68ed2d667bB89f5e4506193a02eC3'\n}\n\nexport default ELA","import Web3 from 'web3'\nimport Axios from 'axios'\nimport Withdrawer from './Withdrawer'\nimport BigNumber from 'bignumber.js'\nimport ELA from \"./ELA\";\n\nconst God = {\n\ttheEth: null,\n\ttheWeb3: null,\n\ttheWithdrawer: null,\n\t_theAccount: '',\n\t// theNetwork: '',\n\t// theBalanceOfELA: 0,\n\tAPI: '/api/v1/oracle/signature',\n\t_contractELA: null,\n\n\t/**\n\t * 因为是测试模拟流程，所以没有实现基于web3的新建帐户或导入已有帐户私钥等功能，暂时先基于Metamask浏览器插件运行。\n\t * 初始化时连接Metamask后，使用Metamask封装的web3进行链的操作。\n\t * @param {Function} callback 成功后回调。\n\t */\n\tinit: function (callback) {\n\t\tconsole.log('因为是测试模拟流程，所以没有实现基于web3的新建帐户或导入已有帐户私钥等功能，暂时先基于Metamask浏览器插件运行。')\n\n\t\tif (typeof window.ethereum !== 'undefined') {\n\t\t\tthis.theEth = window.ethereum\n\t\t\tthis.theEth.enable()\n\t\t\tthis.theWeb3 = new Web3(Web3.givenProvider)\n\t\t\treturn callback()\n\t\t}\n\t},\n\n\tgetNetwork: function (callback) {\n\t\tthis.theWeb3.eth.net.getNetworkType().then(network => {\n\t\t\treturn callback(network)\n\t\t})\n\t},\n\n\tgetAccount: function (callback) {\n\t\tthis.theWeb3.eth.getAccounts().then(accounts => {\n\t\t\tthis._theAccount = accounts[0]\n\t\t\treturn callback(this._theAccount)\n\t\t})\n\t},\n\n\tgetBalanceOfELA: function (callback) {\n\t\tthis.getELAContract().methods.balanceOf(this._theAccount).call().then(balance => {\n\t\t\treturn callback(balance)\n\t\t})\n\t},\n\n\tgetBalanceOfETH: function (callback) {\n\t\tthis.theWeb3.eth.getBalance(this._theAccount).then(balance => {\n\t\t\treturn callback(this.theWeb3.utils.fromWei(balance, 'ether'))\n\t\t})\n\t},\n\n\tgetELAContract: function () {\n\t\tif (!this._contractELA) {\n\t\t\tthis._contractELA = new this.theWeb3.eth.Contract(ELA.abi, ELA.address)\n\t\t}\n\t\treturn this._contractELA\n\t},\n\n\t/**\n\t * 向初始合约发送指定ETH，测试时为写死的50000000000000000。\n\t * @param {Number} num 转帐数量\n\t * @param {Function} callback 成功后回调。\n\t */\n\tsendELA: function (num, callback) {\n\t\t// this.theWeb3.eth.sendTransaction({\n\t\t// \tfrom: this.theAccount,\n\t\t// \tto: '0xf98D7594f3f68ed2d667bB89f5e4506193a02eC3',\n\t\t// \tvalue: new BigNumber(this.theWeb3.utils.toWei(num, 'ether'))\n\t\t// }, (error, hash) => {\n\t\t// \t// if (error) {\n\t\t// \t// \treturn console.error(error)\n\t\t// \t// } else {\n\t\t// \t// \treturn callback(hash)\n\t\t// \t// }\n\n\t\t// \t// 测试时，即使中断支付也可以模拟到下一步。\n\t\t// \treturn callback('模拟tx')\n\t\t// })\n\t},\n\n\t/**\n\t * 请求签名接口。\n\t * @param {String} tx 转帐交易tx\n\t * @param {Function} callback 成功后回调\n\t */\n\trequestAPI: function (tx, callback) {\n\t\t// Axios.get(this.API + 'xid=' + tx + '&chain_type=ESC').then(function (response) {\n\t\t// \tif (response.status === 200) {\n\t\t// \t\treturn callback(response.result)\n\t\t// \t}\n\t\t// }).catch(function (error) {\n\t\t// \tconsole.error(error);\n\t\t// }).then(function () { });\n\n\t\t// 模拟请求接口后返回数据。\n\t\treturn callback({\n\t\t\t\"to\": \"0x5b4a755b609bca3cafb48ba893973ef6fa146554\",\n\t\t\t\"amount\": 10,\n\t\t\t\"nonce\": 36,\n\t\t\t\"v\": 28,\n\t\t\t\"r\": \"0x2a0b4d300510e5f7126c656b92de71f81a0a3ded5aa738a55e0c7b55be2b3d90\",\n\t\t\t\"s\": \"0x095cd24bab00bcd157a6441a729c064b6881e0263301b1b06c7c67062968d111\",\n\t\t\t\"txid\": \"0xbdd419ff6dab0d45d73bc786db0e9eda34a136d1c09ce47f6ab5af6261fea3e3\",\n\t\t\t\"chain\": \"ETH\",\n\t\t\t\"action\": \"esc_withdraw\",\n\t\t\t\"token_address\": \"0x52e7cA56ac0391918FAAe11a91b8827cb5838Eb8\",\n\t\t\t\"contract\": \"0x52e7cA56ac0391918FAAe11a91b8827cb5838Eb8\"\n\t\t})\n\t},\n\n\t/**\n\t * 根据签名接口返回的合约地址生成提币合约对象。\n\t * @param {String} contractAddress 提币合约地址\n\t */\n\tmakeWithdrawer: function (contractAddress) {\n\t\tif (!this.theWithdrawer) {\n\t\t\tthis.theWithdrawer = new this.theWeb3.eth.Contract(Withdrawer.abi, contractAddress)\n\t\t}\n\t},\n\n\t/**\n\t * 提币操作。\n\t * @param {Object} args 参数对象。\n\t * @param {Function} callback 成功后回调。\n\t */\n\twithdraw: function (args, callback) {\n\t\tthis.theWithdrawer.methods.withdraw(\n\t\t\targs.txid,\n\t\t\targs.to,\n\t\t\targs.amount,\n\t\t\t[args.nonce],\n\t\t\t[args.v],\n\t\t\t[args.r],\n\t\t\t[args.s]\n\t\t).call().then(function (res) {\n\t\t\treturn callback()\n\t\t})\n\t}\n}\n\nexport default God","import React from 'react'\n\nclass MainView extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props)\n\n\t\tthis.state = {\n\t\t\tvalue: 0\n\t\t}\n\n\t\tthis.onClickSendELA = this.onClickSendELA.bind(this)\n\t\tthis.onChangeValue = this.onChangeValue.bind(this)\n\t}\n\n\tonClickSendELA() {\n\t\tif (this.state.value > 0) {\n\t\t\treturn this.props.sendELA(String(this.state.value))\n\t\t}\n\t}\n\n\tonChangeValue(event) {\n\t\tthis.setState({\n\t\t\tvalue: parseFloat(event.currentTarget.value)\n\t\t})\n\t}\n\n\trender() {\n\t\treturn <div style={{\n\t\t\tmargin: '1rem',\n\t\t\tfontFamily: 'monospace'\n\t\t}}>\n\t\t\t<div>\n\t\t\t\t<span>Current Network: </span>\n\t\t\t\t<span>{this.props.net}</span>\n\t\t\t</div>\n\n\t\t\t<div>\n\t\t\t\t<span>Current Wallet: </span>\n\t\t\t\t<span>{this.props.wallet}</span>\n\t\t\t</div>\n\n\t\t\t<div>\n\t\t\t\t<span>ELA Balance: </span>\n\t\t\t\t<span>{this.props.balanceELA}</span>\n\t\t\t</div>\n\n\t\t\t<div>\n\t\t\t\t<span>ETH Balance: </span>\n\t\t\t\t<span>{this.props.balance}</span>\n\t\t\t</div>\n\n\t\t\t<div style={{\n\t\t\t\tmarginTop: '1rem',\n\t\t\t\tmarginBottom: '1rem'\n\t\t\t}}>\n\t\t\t\t<div>Mapping ELA to ETH</div>\n\n\t\t\t\t<div>\n\t\t\t\t\t<span>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\tonChange={this.onChangeValue}\n\t\t\t\t\t\t\tstep=\"0.01\"\n\t\t\t\t\t\t\ttype=\"number\" />\n\t\t\t\t\t</span>\n\t\t\t\t\t<button\n\t\t\t\t\t\tdisabled={!(this.state.value > 0)}\n\t\t\t\t\t\tonClick={this.onClickSendELA}>Send ELA</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t<div style={{\n\t\t\t\tfontSize: '0.8rem'\n\t\t\t}}>{this.props.message}</div>\n\t\t</div>\n\t}\n}\n\nexport default MainView","import React, { useState } from 'react';\nimport God from './God'\nimport MainView from './MainView'\n\nfunction App() {\n  const [me, setMe] = useState('')\n  const [net, setNet] = useState('')\n  const [balance, setBalance] = useState(0)\n  const [balanceELA, setBalanceELA] = useState(0)\n  const [message, setMessage] = useState('点击\"Send\"按钮发送token')\n  const [loaded, setLoaded] = useState(false)\n\n  God.init(() => {\n    God.getNetwork(network => {\n      setNet(network)\n    })\n\n    God.getAccount(account => {\n      setMe(account)\n\n      God.getBalanceOfETH(eth => {\n        setBalance(eth)\n      })\n\n      God.getBalanceOfELA(ela => {\n        setBalanceELA(ela)\n      })\n\n      setLoaded(true)\n    })\n  })\n\n  const sendELA = (num) => {\n    setMessage('正在向指定合约转帐，等待唤起Metamask……')\n\n    God.sendELA(num, tx => {\n      setMessage('转帐请求（' + tx + '）正在确认，请求签名接口……')\n\n      God.requestAPI(tx, result => {\n        setMessage('正在请求提币合约……')\n\n        God.makeWithdrawer(result.contract)\n        God.withdraw(result, () => {\n          setMessage('流程结束，提取请求正在等待节点确认……')\n        })\n      })\n    })\n  }\n\n  return (\n    <div>\n      <h1 style={{ marginLeft: '1rem' }}>Smart Contract Testing</h1>\n\n      {loaded ? (<MainView\n        net={net}\n        wallet={me}\n        balance={balance}\n        balanceELA={balanceELA}\n        sendELA={sendELA}\n        message={message} />) : null}\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}